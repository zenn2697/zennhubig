-- i love the community
-- say i love you back pookies.

--[[


zennhub team
                                                                                                                                                        
]] --
-- zennhub team
















--[[

zennhub

OPEN SOURCE VERSION: I wont be maintaining the old version of the code so its open source now.

]]--

-- fly
local flySettings={fly=false,flyspeed=50}
local c local h local bv local bav local cam local flying local p=game.Players.LocalPlayer
local buttons={W=false,S=false,A=false,D=false,Moving=false}
local startFly=function()if not p.Character or not p.Character.Head or flying then return end c=p.Character h=c.Humanoid h.PlatformStand=true cam=workspace:WaitForChild('Camera') bv=Instance.new("BodyVelocity") bav=Instance.new("BodyAngularVelocity") bv.Velocity,bv.MaxForce,bv.P=Vector3.new(0,0,0),Vector3.new(10000,10000,10000),1000 bav.AngularVelocity,bav.MaxTorque,bav.P=Vector3.new(0,0,0),Vector3.new(10000,10000,10000),1000 bv.Parent=c.Head bav.Parent=c.Head flying=true h.Died:connect(function()flying=false end)end
local endFly=function()if not p.Character or not flying then return end h.PlatformStand=false bv:Destroy() bav:Destroy() flying=false end
game:GetService("UserInputService").InputBegan:connect(function(input,GPE)if GPE then return end for i,e in pairs(buttons)do if i~="Moving" and input.KeyCode==Enum.KeyCode[i]then buttons[i]=true buttons.Moving=true end end end)
game:GetService("UserInputService").InputEnded:connect(function(input,GPE)if GPE then return end local a=false for i,e in pairs(buttons)do if i~="Moving"then if input.KeyCode==Enum.KeyCode[i]then buttons[i]=false end if buttons[i]then a=true end end end buttons.Moving=a end)
local setVec=function(vec)return vec*(flySettings.flyspeed/vec.Magnitude)end
game:GetService("RunService").Heartbeat:connect(function(step)if flying and c and c.PrimaryPart then local p=c.PrimaryPart.Position local cf=cam.CFrame local ax,ay,az=cf:toEulerAnglesXYZ()c:SetPrimaryPartCFrame(CFrame.new(p.x,p.y,p.z)*CFrame.Angles(ax,ay,az))if buttons.Moving then local t=Vector3.new()if buttons.W then t=t+(setVec(cf.lookVector))end if buttons.S then t=t-(setVec(cf.lookVector))end if buttons.A then t=t-(setVec(cf.rightVector))end if buttons.D then t=t+(setVec(cf.rightVector))end c:TranslateBy(t*step)end end end)

  
  local Players=game:GetService("Players");
  local Player=Players.LocalPlayer;
  --local Mouse=Player:GetMouse();
  local Workspace=game:GetService("Workspace");
  local CurrentCam=Workspace.CurrentCamera;
  local require=require;
  local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/Vape.txt"))()
  local win = lib:Window("ZENN2697 | MADE BY ZENN2697 ", Color3.fromRGB(44, 120, 224), Enum.KeyCode.P)
  
  -- Hitbox settings
  local hitboxEnabled = false
  local hitboxTransparency = 0
  local originalHitboxSize = Vector3.new(1, 1, 1)
  local hitboxSize = 4
  
  local tab = win:Tab("MAINTAB")

-- not really a silent aim just shoots the closest enemy player lol
-- also could be patched since i havent updated it for awhile 
 
-- Hitbox
  tab:Label("HITBOX")
  local function hitboxesNoCollision()
      for _, player in pairs(game:GetService("Players"):GetPlayers()) do
          if player ~= game:GetService("Players").LocalPlayer then
              local character = player.Character
              local rootPart = character and character:FindFirstChild("HumanoidRootPart")
              if rootPart then
                  local success, err = pcall(function()
                      rootPart.CanCollide = not hitboxEnabled
                      rootPart.Transparency = hitboxEnabled and hitboxTransparency or 0
                      rootPart.Size = hitboxEnabled and Vector3.new(hitboxSize, hitboxSize, hitboxSize) or originalHitboxSize
                      rootPart.CollisionGroup = hitboxEnabled and "PlayerHitbox" or "Default"
                  end)
                  if not success then
                      warn("Error modifying the hitbox:", err)
                  end
              end
          end
      end
  end
  
  tab:Toggle("Hitbox", false, function(state)
      hitboxEnabled = state
  
      if state then
          connection = game:GetService("RunService").Stepped:Connect(hitboxesNoCollision)
      else
          if connection then
              connection:Disconnect()
          end
          hitboxesNoCollision()
      end
  end)
  
  tab:Slider("Hitbox Size", 1, 10, hitboxSize, function(value)
      hitboxSize = value
      hitboxesNoCollision()
  end)
  
  tab:Slider("Hitbox Transparency", 0, 1, hitboxTransparency, function(value)
      hitboxTransparency = value
      hitboxesNoCollision()
  end)
  
  -- ESPS✝️
  local Visual = win:Tab("ESPS")
  Visual:Label("> ESP")
  -- JUST ESP
  local aj = loadstring(game:HttpGet("https://raw.githubusercontent.com/StevenK-293/Loadstrings/main/esp.lua"))()
  
  Visual:Toggle("THIS ESP WILL NOT WORK FOR FFA OR ZW", false, function(K)
      aj:Toggle(K)
      aj.Players = K
  end)
  
  Visual:Toggle("TRACERS", false, function(K)
      aj.Tracers = K
  end)
  
  Visual:Toggle("NAME", false, function(K)
      aj.Names = K
  end)
  
  Visual:Toggle("BOXES", false, function(K)
      aj.Boxes = K
  end)
  
  Visual:Toggle("THE TEAM COLOR", false, function(L)
      aj.TeamColor = L
  end)
  
  Visual:Toggle("YOUR TEAMMATES", false, function(L)
      aj.TeamMates = L
  end)
  
  Visual:Colorpicker("THE ESP COLOR", Color3.fromRGB(0, 0, 255), function(P)
      aj.Color = P
  end)
  
  -- FUN STUFF
  local tab3 = win:Tab("FUN STUFF")
  tab3:Label("FLY")
  tab3:Toggle("TOGGLE FLY", false, function(state)
      if state then
          startFly()
      else
          endFly()
      end
  end)
  
  tab3:Slider("FLY SPEED", 1, 500, 1, function(s)
      flySettings.flyspeed = s
  end)
  
  tab3:Label("PLAYER WALK SPEED")
  
  local settings = {
      WALKSPEED = 16,
      JUMPPOWER = 50
  }
  
  local function setWalkSpeed(value)
      settings.WALKSPEED = value
      local player = game:GetService("Players").LocalPlayer
      local character = player.Character
      local humanoid = character and character:FindFirstChild("Humanoid")
  
      if humanoid then
          humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
              humanoid.WalkSpeed = settings.WalkSpeed
          end)
          humanoid.WalkSpeed = settings.WalkSpeed
      end
  end
  
  tab3:Slider("Walkspeed", 16, 500, 16, function(value)
      setWalkSpeed(value)
  end)
  
  tab3:Label("PLAYER JUMPPOWER")
  
  local function setJumpPower(value)
      settings.JUMPPOWER = value
      local player = game:GetService("Players").LocalPlayer
      local character = player.Character
      local humanoid = character and character:FindFirstChild("Humanoid")
  
      if humanoid then
          humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
              humanoid.JumpPower = settings.JumpPower
          end)
          humanoid.JumpPower = settings.JumpPower
      end
  end
  
  tab3:Slider("JumpPower", 50, 500, 50, function(value)
      setJumpPower(value)
  end)
  
  local IJ = false
  tab3:Toggle("INFINITE JUMP", false, function(state)
      IJ = state
      game:GetService("UserInputService").JumpRequest:Connect(function()
          if IJ then
              game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState("Jumping")
          end
      end)
  end)
  
  -- MISC
  local changeclr = win:Tab("MISC")
  local toggle = false
    
  changeclr:Colorpicker("CHANAGE THE COLOR OF THE UI", Color3.fromRGB(44, 120, 224), function(t)
      lib:ChangePresetColor(Color3.fromRGB(t.R * 255, t.G * 255, t.B * 255))
  end)
  
  
